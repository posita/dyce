from dyce import H, P

def dependent_term(
  val_1,
  val_2,
  val_3,
  val_n,
):
  import math ; math.gcd(456**123, 123**456)  # emulate an expensive calculation
  return (
    (val_1 == val_2) +
    (val_2 == val_3) +
    (val_1 == val_3) +
    (
      val_n > val_1
      and val_n > val_2
      and val_n > val_3
    )
  )

def dependent_term_h(
  outcome_1,
  outcome_2,
  outcome_3,
  outcome_n,
):
  return dependent_term(outcome_1, outcome_2, outcome_3, outcome_n)

def dependent_term_p(
  roll_1,
  roll_2,
  roll_3,
  roll_n,
):
  return dependent_term(roll_1, roll_2, roll_3, roll_n)

source_1 = H(6)
source_2 = H(8)
source_3 = H(10)
source_n = H(20)

print(f"%timeit P.foreach({dependent_term_p.__name__}, roll_1={source_1}, roll_2={source_2}, roll_3={source_3}, roll_n={source_n})")
%timeit P.foreach(dependent_term_p, roll_1=source_1, roll_2=source_2, roll_3=source_3, roll_n=source_n)
print()

print(f"%timeit H.foreach({dependent_term_h.__name__}, outcome_1={source_1}, outcome_2={source_2}, outcome_3={source_3}, outcome_n={source_n})")
%timeit H.foreach(dependent_term_h, outcome_1=source_1, outcome_2=source_2, outcome_3=source_3, outcome_n=source_n)
print()
