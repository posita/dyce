# ======================================================================================
# Copyright and other protections apply. Please see the accompanying LICENSE file for
# rights and restrictions governing use of this software. All rights not expressly
# waived or licensed are reserved. If that file is missing or appears to be modified
# from its original, then please contact the author before viewing or using this
# software in any capacity.
# ======================================================================================

[metadata]  # --------------------------------------------------------------------------

name = dyce
version = attr:dyce.version.__vers_str__
url = https://posita.github.io/dyce/
author = Matt Bogosian
author_email = matt@bogosian.net
project_urls =
    Source Repository = https://github.com/posita/dyce/
# From <https://pypi.python.org/pypi?%3Aaction=list_classifiers>
classifiers =
  Topic :: Education
  Topic :: Games/Entertainment
  Topic :: Scientific/Engineering :: Mathematics
  Topic :: Software Development :: Libraries :: Python Modules
  Typing :: Typed
  Development Status :: 4 - Beta
  Intended Audience :: Developers
  Intended Audience :: Education
  Intended Audience :: Science/Research
  License :: OSI Approved :: MIT License
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Programming Language :: Python :: Implementation :: CPython
  Programming Language :: Python :: Implementation :: PyPy
license = MIT License
license_files = LICENSE
description = Simple Python tools for exploring dice outcomes and other finite discrete probabilities
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]  # ---------------------------------------------------------------------------

packages = dyce
python_requires = >=3.8
install_requires =
  numerary>=0.4.0

[options.extras_require]  # ------------------------------------------------------------

dev =
  numpy
  pandas
  pre-commit
  setuptools-scm
  sympy>=1.9
  tox

[options.package_data]  # --------------------------------------------------------------

dyce = py.typed

[tox:tox]  # ---------------------------------------------------------------------------

envlist = check, py310-lint, py310{,-beartype}
skipsdist = true
skip_missing_interpreters = true

[gh-actions]  # ------------------------------------------------------------------------

python =
  3.8: py38-beartype
  3.9: py39-lint, py39{,-beartype}
  3.10: py310-lint, py310{,-beartype}
  3.11: py311-lint, py311{,-beartype}
  pypy-3.8: pypy38-beartype
  pypy-3.9: pypy39-beartype

[testenv]  # ---------------------------------------------------------------------------

commands =
  debug: pytest {posargs}
  !debug: pytest --cov=dyce --numprocesses {env:NUMBER_OF_PROCESSORS:auto} {posargs}
deps =
  --editable .
  anydyce>=0.1.4
  !pypy38: numpy
  pytest
  # Because ${HOME} is not passed, ~/.gitconfig is not read. To overcome this, port any
  # desired user-specific exclusion configuration to .git/config. E.G.:
  #
  #   [core]
  #   excludesfile = /home/username/.gitignore
  #
  # Alternatively, add entries directly to .git/info/exclude. See also mkdocs-exclude
  # below.
  pytest-gitignore
  !debug: pytest-cov
  !debug: pytest-xdist
  sympy
passenv =
  PYTHONBREAKPOINT
setenv =
  beartype: NUMERARY_BEARTYPE = yes
  !beartype: NUMERARY_BEARTYPE = no
  PYTHONWARNINGS = {env:PYTHONWARNINGS:ignore}

[testenv:assets]  # --------------------------------------------------------------------

commands =
  make -C docs/assets -j {env:NUMBER_OF_PROCESSORS:6}
  make -C docs/assets perf
deps =
  --editable .
  anydyce>=0.1.4
  graphviz
  matplotlib
  pandas
  sympy
  pygraphviz
  # pylint contains pyreverse
  pylint
whitelist_externals =
  make

[testenv:check]  # ---------------------------------------------------------------------

commands =
  rm -frv site
  jupyter lite build
  mkdocs build --strict
  python -c 'from setuptools import setup ; setup()' bdist_wheel
  twine check dist/*
deps =
  --editable .
  jupyterlab_server
  jupyterlite>=0.1.0b9
  pkginfo
  mike
  # See <https://github.com/mkdocs/mkdocs/issues/2448>
  # See <https://github.com/mkdocstrings/mkdocstrings/issues/295>
  mkdocs!=1.2
  # See pytest-gitignore note above
  mkdocs-exclude
  mkdocs-macros-plugin
  mkdocs-material
  mkdocstrings[python]>=0.18
  setuptools-scm
  sympy
  twine
whitelist_externals =
  rm

[testenv:jupyter]  # -------------------------------------------------------------------

commands =
  jupyter-lab {posargs}
deps =
  --editable .
  jupyterlab

[testenv:py{38,39,310,311}-lint]  # ----------------------------------------------------

commands =
  pre-commit run --all-files --show-diff-on-failure
  mypy --config-file={toxinidir}/pyproject.toml --warn-unused-ignores .
  {toxinidir}/helpers/mypy-doctests.py -a=--config-file={toxinidir}/pyproject.toml .
deps =
  --editable .
  mypy>=0.931
  pre-commit
  sympy

[flake8]  # ----------------------------------------------------------------------------

# See:
# * <https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes>
# * <https://flake8.readthedocs.io/en/latest/user/error-codes.html>
ignore =
  E203,  # whitespace before ':'
  E501,  # line too long (... > ... characters)
  W503,  # line break occurred before a binary operator
